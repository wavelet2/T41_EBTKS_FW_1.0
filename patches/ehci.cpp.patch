--- a/ehci.cpp	2020-07-01 12:30:23.000000000 +0100
+++ b/ehci.cpp	2021-09-15 10:56:53.192735700 +0100
@@ -477,7 +477,8 @@
 	//USBHDBGSerial.println(remain);
 	if (microseconds < remain) {
 		// this timer event is before any on the schedule
-		__disable_irq();
+		//__disable_irq();
+		NVIC_DISABLE_IRQ(IRQ_USBHS);  // RB/PMF
 		USBHS_GPTIMER1CTL = 0;
 		USBHS_USBSTS = USBHS_USBSTS_TI1; // TODO: UPI & UAI safety?!
 		usec = microseconds;
@@ -488,7 +489,8 @@
 		active_timers = this;
 		USBHS_GPTIMER1LD = microseconds - 1;
 		USBHS_GPTIMER1CTL = USBHS_GPTIMERCTL_RST | USBHS_GPTIMERCTL_RUN;
-		__enable_irq();
+		//__enable_irq();
+		NVIC_ENABLE_IRQ(IRQ_USBHS);  // RB/PMF
 		return;
 	}
 	// add this timer to the schedule, somewhere after the first timer
@@ -517,7 +519,8 @@
 
 void USBDriverTimer::stop()
 {
-	__disable_irq();
+	//__disable_irq();
+	NVIC_DISABLE_IRQ(IRQ_USBHS);  // RB/PMF
 	if (active_timers) {
 		if (active_timers == this) {
 			USBHS_GPTIMER1CTL = 0;
@@ -545,7 +548,8 @@
 			}
 		}
 	}
-	__enable_irq();
+	//__enable_irq();
+	NVIC_ENABLE_IRQ(IRQ_USBHS);  // RB/PMF
 }
 
 
